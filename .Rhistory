lm(mpg~wt, data=mtcars)
xpto <- lm(mpg~wt, data=mtcars)
summary(xpto)
60* 24
install.packages("ggplot2")
ifelse(dates$wday == 6 || dates$wday == 0, 'weekend', 'weekday')
?rep
data = data[!complete.cases(data$steps),]
complete.cases(data$steps)
data$steps
unzip("repdata-data-activity.zip")
data = read.csv("activity.csv")
?cumsum
library(swirl)
swirl()
.64
.64
mypdf()
mypdf(.6)
mypdf(1.6)
info()
info(mypfd)
?mypdf
mypdf(1)
info()
skip()
mypdf(1.5)
integrate(mypdf,0,1.6)
1
2
sqrt(0.5 * 4 )
.997 * .001
(1-(.985)) * (1-.001)
(0.000997 + 0.014985)
(.997 * .001)/(0.000997 + 0.014985)
3.5
expect_dice()
expect_dice(pmf = 1/6)
expected_dice
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 * (edh + edl)
swirl()
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
dice_sqr
dice_sqr * dice_fair
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair
ex2_fair-3.5^2
ex2_high <- sum(dice_sqr * dice_high)
sum(dice_sqr * dice_high)
dice_high
edh
sum(dice_sqr * dice_high) -edh^2
library(swirl)
swirl()
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3) * .8^3 * (.2)^(2)
choose(5,x)*(.8)^x*(.2)^(5-x) for x=3,4,5
choose(5,3)*(.8)^x*(.2)^(5-3)
choose(5,3)*(.8)^x*(.2)^(5-3) + choose(5,4)*(.8)^x*(.2)^(5-4) + choose(5,5)*(.8)^x*(.2)^(5-5)
info()
choose(5,3)*(.8)^x*(.2)^(5-3)
sum(choose(5,3)*(.8)^x*(.2)^(5-3))
choose(5,x)
choose(5,3)
chose(5,3) * 0.8^3 * 0.2^2
choose(5,3) * 0.8^3 * 0.2^2
choose(5,3) * 0.8^3 * 0.2^2 + choose(5,4) * 0.8^4 * 0.2^1 + choose(5,5) * 0.8^5 * 0.2^0
?pbinom
pbin(2,5,.8)
pbinom(2,5,.8)
pbinom(2,size=5,prob=.8, lower.tail = FALSE)
?qnorm
qnorm(10)
qnorm(.1)
0
qnorm(.975,3,2)
3 + 2 * 1.96
qnorm(.975,1020,60)
pnorm(.1200,1020,50)
pnorm(.1200,1020,50, lower.tail=FALSE)
pnorm(1200,1020,50, lower.tail=FALSE)
(1200 - 1020)/50
pnorm(1200 - 1020)/50, lower.tail=FALSE)
pnorm((1200 - 1020)/50, lower.tail=FALSE)
qnorm(.75, 1020, 50, lower.tail=FALSE)
qnorm(.75, 1020, 50, lower.tail=TRUE)
pnorm(qnorm(.53))
qnorm(pnorm(.53))?
;
qnorm(pnorm(.53))
?ppois
ppois(3, (2.5 * 4))
ppois(3, 2.5 * 4)
pbinom(5,1000,.01)
ppois(5, 1000 * 0.06613951)
ppois(5, 1000 * 0.01)
ccoinPlot(10)
coinPlot(10)
coinPlot(10000)
swirl()
qnorm(95)
qnorm(.95)
p'+/- qnorm(.975)*sqrt(p'(1-p')/100)
p
p'+/- qnorm(.975)*sqrt(p'(1-p')/100)
myWald
qnorm(.975)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
?binom.test
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb = 5/94.32
lamb <- 5/94.32
c(-1,1)*qnorm(.975)*sqrt(lamb)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
lamb +c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
setwd("/home/marcelo/Ambiente/workspace-r/RepData_PeerAssessment2/")
data <- read.csv("data/repdata-data-StormData.csv")
setwd("/home/marcelo/Ambiente/workspace-r/RepData_PeerAssessment2/")
data <- read.csv("data/repdata-data-StormData.csv")
formatC(c((-1:1)/0,c(1,100)*pi), width = 8, digits = 1)
formatC(1e10, width = 8, digits = 1)
1e10
1e10 + 1
1e10 + 10
formatC(1e10)
formatC(1e10, digits = 1)
formatC(1000, digits = 1)
formatC(1000, format ="3d" ,digits = 1)
formatC(1000, format ="d" ,digits = 1)
formatC(1000, format ="d.d" ,digits = 1)
formatC(1000, format ="d", width = 2, digits = 1)
formatC(1000, format ="d", width = 2, digits = 1)
prettyNum(1000, big.mark = ",")
breaks = c(min(most_damage_econ_evt_sort$ECON_DAMAGE), 0, max(most_damage_econ_evt_sort$ECON_DAMAGE))
data
